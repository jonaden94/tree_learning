model:
  # LEAVE UNCHANGED
  semantic_only: False # only train backbone 
  semantic_classes: 2 # number of semantic classes
  instance_classes: 2 # number of instance classes
  ignore_label: -100 # this does not occur for me

  # CHANGEABLE
  channels: 32 # number of channels for certain outputs
  num_blocks: 7 # number of blocks in unet backbone

  grouping_cfg:
    # LEAVE UNCHANGED
    mean_active: 300 # constrain number of nearest neighbors in grouping; technical detail / irrelevant
    class_numpoint_mean: [-1, -1] # if -1 npoint_thre is absolte, else relative
    npoint_thr: 100 # discard smaller clusters immediately
    ignore_classes: [0] # classes ignored during grouping, automatically grouped to one instance

    # CHANGEABLE
    score_thr: 0.2 # min score to use point in grouping
    radius: 0.2 # grouping radius
    
  instance_voxel_cfg:
    # CHANGEABLE (according to scale of backbone training)
    scale: 20 # same as scale in voxel_cfg --> Make sure not to make voxel size smaller than when features were extracted
    spatial_shape: 20 # Spatial shape of voxelized proposal --> 20 x 20 x 20

  train_cfg:
    # LEAVE UNCHANGED
    max_proposal_num: 100 # maximum number of proposals

    # CHANGEABLE
    pos_iou_thr: 0.5 # iou to determine whether proposal is a positive sample
    
  test_cfg:
    # LEAVE UNCHANGED FOR NOW
    cls_score_thr: 0.001 # discard when certainty score below
    mask_score_thr: -0.5 # mask out when mask_score below (seems to not happen)
    min_npoint: 100 # minimum number of points for each instance
  fixed_modules: ['input_conv', 'unet', 'output_layer', 'semantic_linear', 'offset_linear'] # modules whose parameters are not updated

data:
  train:
    data_root: 'data/trees/train'
    training: True
    examples_per_epoch: 500
    scale: 10

  test:
    data_root: 'data/trees/val'
    training: False
    scale: 10

dataloader:
  train:
    batch_size: 2
    num_workers: 4
  test:
    batch_size: 1
    num_workers: 1

optimizer:
  type: 'Adam'
  lr: 0.002 # reduced learning rate by factor 1/2 since batch_size reduced by factor 2

save_cfg:
  semantic: True
  offset: True
  instance: True

fp16: False
epochs: 40
step_epoch: 0
save_freq: 2
pretrain: 'work_dirs/sem1_lessvoxel/latest.pth'
work_dir: ''
